""" Cliente """
type Cliente {
	id: ID
	nombre: String
	apellido: String
	empresa: String
	email: String
	tipo: TipoCliente
}

""" Producto """
type Producto {
	id: ID
	nombre: String
	precio: Int
	stock: Int
}

""" Pedido """
type Pedido {
	id: ID
	pedido: [PedidoProducto]
	total: Int
	fecha: String
	cliente: ID!
	estado: TipoEstadoPedido
}

""" Producto en un pedido """
type PedidoProducto {
	id: ID!
	cantidad: Int!
	precio: Int!
}

""" Total dinero obtenido por un cliente """
type ClienteTotal {
	total: Float
	cliente: [Cliente]
}

type Query {
	# clientes
	""" Obtén los datos de todos los clientes, opcionalmente puedes limitar el número de resultados y la paginación """
	getClientes(limite: Int, offset: Int): [Cliente]

	""" Obtén los datos de un cliente (especificando su id) """
	getCliente(id: ID!): Cliente

	""" Obtén el número total de clientes registrados en la base de datos """
	totalClientes: String

	# productos
	""" Obtén los datos de todos los productos, opcionalmente puedes limitar el número de resultados y la paginación """
	obtenerProductos(limite: Int, offset: Int, hasStock: Boolean): [Producto]

	""" Obtén los datos de un producto (especificando su id) """
	obtenerProducto(id: ID!): Producto

	""" Obtén el número total de productos registrados en la base de datos """
	totalProductos: String


	# pedidos
	""" Obtén los datos de todos los pedidos filtrados por cliente """
	obtenerPedidos(clienteId: String!): [Pedido]

	# gráficas
	""" Obtén el top 10 clientes ordenados por dinero que han gastado """
	topClientes: [ClienteTotal]
}

type Mutation {
	# clientes
	""" Te permite crear nuevos clientes """
	crearCliente(input: ClienteInput): Cliente

	""" Te permite actualizar los datos de un cliente """
	actualizarCliente(input: ClienteInput): Cliente

	""" Te permite eliminar un cliente """
	eliminarCliente(id: ID!): String


	# productos
	""" Te permite crear nuevos productos """
	nuevoProducto(input: ProductoInput): Producto

	""" Te permite actualizar los datos de un producto """
	actualizarProducto(input: ProductoInput): Producto

	""" Te permite eliminar un producto """
	eliminarProducto(id: ID!): String

	# pedidos
	""" Te permite crear nuevos pedidos """
	nuevoPedido(input: PedidoInput): Pedido

	""" Te permite actualizar el estado de un pedido """
	actualizarEstado(input: PedidoInput!): String
}

""" Campos para definir un cliente """
input ClienteInput {
	id: ID
	nombre: String!
	apellido: String
	empresa: String
	email: String!
	tipo: TipoCliente!
	pedidos: [PedidoInput]
}

""" Campos para definir un producto """
input ProductoInput {
	id: ID
	nombre: String!
	precio: Int!
	stock: Int!
}

""" Campos para definir un pedido """
input PedidoInput {
	id: ID
	pedido: [PedidoProductoInput]
	total: Int
	fecha: String
	cliente: ID!
	estado: TipoEstadoPedido
}

""" Campos para definir un producto en un pedido """
input PedidoProductoInput {
	id: ID!
	cantidad: Int!
	precio: Int!
}

""" Asigna la categoría del Cliente """
enum TipoCliente {
	BASICO
	PREMIUM
}

""" Asigna el estado del Pedido """
enum TipoEstadoPedido {
	PENDIENTE
	COMPLETADO
	CANCELADO
}
